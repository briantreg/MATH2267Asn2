setwd("..")
setwd("./data")
getwd()
setwd("./assignment_2")
setwd("./scripts")
source("1_Load_andClean_Data_Assgn2.R")
ls()
ls(wd)
ls(getwd())
source("1_Load_andClean_Data__Assgn2.R")
PERSON$INJ_LEVEL
levels(PERSON$INJ_LEVEL)
levels(PERSON$Inj.Level.Desc)
count(ACCIDENT$Accident.Type.Desc)
aggregate(ACCIDENT_NO ~ Accident.Type.Desc, ACCIDENT, length)
ACCIDENT_EVENT %>%
aggregate(ACCIDENT_NO ~ Event.Type.Desc, length)
ACCIDENT_EVENT %>%
aggregate(ACCIDENT_NO ~ Event.Type.Desc, ., length)
ACCIDENT_EVENT %>%
aggregate(ACCIDENT_NO ~ Event.Type.Desc, ., length) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT_EVENT %>%
aggregate(ACCIDENT_NO ~ Object.Type.Desc, ., length) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(ACCIDENT_NO ~ Accident.Type.Desc, ., length)
ACCIDENT %>%
aggregate(ACCIDENT_NO ~ Accident.Type.Desc, ., length) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(ACCIDENT_NO ~ Light.Condition.Desc, ., length) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(ACCIDENT_NO ~ DCA.Description, ., length) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(ACCIDENT_NO ~ Road.Geometry.Desc, ., length) %>%
.[order(.$ACCIDENT_NO),]
ATMOSPHERIC_COND %>%
aggregate(ACCIDENT_NO ~ ATMOSPH_COND, ., length) %>%
.[order(.$ACCIDENT_NO),]
ATMOSPHERIC_COND %>%
aggregate(ACCIDENT_NO ~ Atmosph.Cond.Desc, ., length) %>%
.[order(.$ACCIDENT_NO),]
PERSON %>%
aggregate(ACCIDENT_NO ~ Road.User.Type.Desc, ., length) %>%
.[order(.$ACCIDENT_NO),]
ROAD_SURFACE_COND %>%
aggregate(ACCIDENT_NO ~ Surface.Cond.Desc, ., length) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(
No_PERSONs +
NO_PERSONS_INJ_2 +
NO_PERSONS_INJ_3 +
NO_PERSONS_KILLED ~
DCA.Description + ,
., length) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(
No_PERSONs +
NO_PERSONS_INJ_2 +
NO_PERSONS_INJ_3 +
NO_PERSONS_KILLED ~
DCA.Description + ,., sum) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(        NO_PERSONS_KILLED ~  DCA.Description + ,., sum) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(NO_PERSONS_KILLED ~  DCA.Description + ,., sum)
ACCIDENT %>%
aggregate(ACCIDENT_NO ~ DCA.Description, ., length) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(ACCIDENT_No ~  DCA.Description + ,., sum)
ACCIDENT %>%
aggregate(
No_PERSONs +
NO_PERSONS_INJ_2 +
NO_PERSONS_INJ_3 +
NO_PERSONS_KILLED ~  DCA.Description ,., sum) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(ACCIDENT_NO ~ Road.Geometry.Desc, ., length) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(
NO_PERSONs +
NO_PERSONS_INJ_2 +
NO_PERSONS_INJ_3 +
NO_PERSONS_KILLED ~  DCA.Description ,., sum) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(
NO_PERSONS +
NO_PERSONS_INJ_2 +
NO_PERSONS_INJ_3 +
NO_PERSONS_KILLED ~  DCA.Description ,., sum) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(
NO_PERSONS +
NO_PERSONS_INJ_2 +
NO_PERSONS_INJ_3 +
NO_PERSONS_KILLED ~  DCA.Description ,., sum)
ACCIDENT %>%
aggregate(NO_PERSONS_KILLED ~  DCA.Description ,., sum) %>%
.[order(.$NO_PERSONS_KILLED),]
ACCIDENT %>%
aggregate(ACCIDENT_NO ~ DCA.Description, ., length) %>%
.[order(.$ACCIDENT_NO),]
ACCIDENT %>%
aggregate(NO_PERSONS ~  DCA.Description ,., sum) %>%
.[order(.$NO_PERSONS_KILLED),]
ACCIDENT %>%
aggregate(NO_PERSONS ~  DCA.Description ,., sum) %>%
.[order(.$NO_PERSONS),]
Diamonds$cut<- factor(Diamonds$cut,
levels=c('Fair','Good','Very Good','Premium','Ideal'),
ordered=TRUE)
data(Diamonds)
Diamonds
library(ggplot2)
data(Diamonds)
Diamonds
dDiamonds
diamonds
diamonds$cut<- factor(diamonds$cut,
levels=c('Fair','Good','Very Good','Premium','Ideal'),
ordered=TRUE)
diamonds$color<- factor(diamonds$color,
levels=c('J','I','H','G','F','E','D'),
ordered=TRUE)
diamonds$clarity<- factor(diamonds$clarity,
levels=c('I1','SI2','SI1','VS2','VS1','VVS2','VVS1','IF'),
ordered=TRUE)
ggplot(data=Diamonds, aes(carat)) +
geom_histogram()
ggplot(data=diamonds, aes(carat)) +
geom_histogram()
ggplot(data=diamonds, aes(carat)) +
geom_histogram(colour = "#FFFFFF")
ggplot(data=diamonds, aes(carat)) +
geom_histogram(colour = "#FFFFFF", fill = "#FF0000")
ggplot(data=diamonds, aes(carat)) +
geom_histogram(colour = "#FFFFFF", fill = "#FFAAAA")
ggplot(data=diamonds, aes(carat, fill=cut)) + geom_density(alpha=.2)
